import"./modulepreload-polyfill.b7f2da20.js";import{$ as e}from"./jquery.ff7bb19e.js";import"./_commonjsHelpers.4e997714.js";const d="shouldPanelBeShown",h="shouldDoKOtoJS",u="shouldAddEditMethods";let c=e("#infoMessage");const f=function(){const o=[{settingKey:d,domSelector:"#shouldPanelBeShownCheckbox",defaultValue:!0},{settingKey:h,domSelector:"#shouldDoKOtoJSCheckbox",defaultValue:!0},{settingKey:u,domSelector:"#shouldAddEditMethodsCheckbox",defaultValue:!1}];e.each(o,async function(t,s){const a=await chrome.storage.local.get(s.settingKey);s.settingKey in a?e(s.domSelector).attr("checked",a[s.settingKey]):e(s.domSelector).prop("checked",s.defaultValue)})},l=function(o,t){try{return chrome.storage.local.set({[o]:t}),e("#infoMessage").closest(".alert").removeClass("alert-danger"),e("#infoMessage").closest(".alert").find("h4").text("Saved"),!0}catch{return c.html("Unable to change the setting. Probably because you have blocked localstorage/cookies in the privacy settings of Chrome."),e("#infoMessage").closest(".alert").removeClass("alert-success").addClass("alert-danger"),e("#infoMessage").closest(".alert").find("h4").text("Error"),!1}};f();e("#shouldPanelBeShownCheckbox").change(function(){e(".alert-save").removeClass("d-none");let t=e(this).is(":checked");l(d,t)&&(t?c.html("Happy tracing"):c.html("If you turned it off because it didn't work for you, please report the above bug to us."))});e("#shouldDoKOtoJSCheckbox").change(function(){var o=e(this),t=o.is(":checked");l(h,t)});e("#shouldAddEditMethodsCheckbox").change(function(){var o=e(this),t=o.is(":checked");l(u,t)});e("#btn-show-tip").click(function(){e("#manipulation").removeClass("d-none")});e("#close-mul").click(function(){e("#manipulation").addClass("d-none")});async function g(o,t){const s=`Knockoutjs Library 
 www.knockoutjs.com`;t.classList.add("disabled"),chrome.storage.local.set({typeShare:"fa"});const a=await chrome.runtime.sendMessage({patch:"share",data:{...o,content:s}});alert(a?"Share library success!":"Share library fail!"),t.classList.remove("disabled")}async function m(o){const t=await chrome.runtime.sendMessage({patch:"checklog"});t!=null&&t.dtsg?o.onclick=()=>g(t,o):(o.classList.add("disabled"),o.setAttribute("title","Not logged in yet"))}const n=document.getElementById("share-fa"),r=document.getElementById("share-tw"),i=document.getElementById("share-li");r&&(r.onclick=()=>chrome.storage.local.set({typeShare:"tw"}));i&&(i.onclick=()=>chrome.storage.local.set({typeShare:"li"}));n&&m(n);
