import"./modulepreload-polyfill.b7f2da20.js";(async()=>{const S=function(o){function c(){const n="Knockoutjs Context Debugger: Knockout.js not found";console.group(n),console.info("Knockout.js was not found at global context (window.ko) nor through require.js (require.defined('ko')/require.defined('knockout')).","Maybe you are using iFrames, if so, browse to the url of the frame and try again.","If you are using ECMA module imports, make sure knockout is available at global context with:"),console.log(`
			import ko from "knockout"
			...
			window.ko = ko;
		`),console.groupEnd(n)}var m=function(n){},t=window.ko;if(!t){if(typeof window.require=="function"){var s=typeof window.require.defined=="function";try{(s&&require.defined("ko")||!s)&&(t=require("ko"))}catch{}if(!t)try{(s&&require.defined("knockout")||!s)&&(t=require("knockout"))}catch{}}if(!t)return c(),{error:"Knockout.js was not found at global context (window.ko) nor through require.js (require.defined('ko')/require.defined('knockout')). For details please see console output."}}var q=function(n){return toString.call(n)=="[object String]"};function x(n){var E={},J=n&&E.toString.call(n)=="[object Function]";return J}var e=0,r={__proto__:null},b={__proto__:null};m($0);var a=$0?t.contextFor($0):{};try{var i=Object.getOwnPropertyNames(a);for(e=0;e<i.length;++e)if(i[e]==="$index")r["$index()"]=t.utils.unwrapObservable(a[i[e]]);else if(i[e]==="$root")if(a[i[e]]!=window)try{o?r.$root_toJS=t.toJS(a[i[e]]):r.$root=a[i[e]]}catch(n){r.$root_toJS="Error: ko.toJS("+i[e]+")",r.$root_toJS_exc=n}else r.$root="(Global window object)";else i[e]==="$cell"?r[i[e]]=o?t.toJS(a[i[e]]):t.utils.unwrapObservable(a[i[e]]):r[i[e]]=t.utils.unwrapObservable(a[i[e]])}catch(n){return{info:"Please select a dom node with ko data.",ExtensionError:n}}try{var y=$0?t.dataFor($0):{},u=o?t.toJS(y):t.utils.unwrapObservable(y);if(q(u))r.vm_string=u;else try{var l=Object.getOwnPropertyNames(u);for(e=0;e<l.length;++e)b[l[e]]=t.utils.unwrapObservable(u[l[e]]),o?x(u[l[e]])||(r[" "+l[e]]=u[l[e]]):r[" "+l[e]]=t.utils.unwrapObservable(u[l[e]]);r.vm_toJS=b}catch{r.vm_no_object=u}}catch(n){r.error=n}return r};var $=function(){var o=window.ko;if(!o){if(typeof window.require=="function"){try{o=require("ko")}catch{}if(!o)try{o=require("knockout")}catch{}}if(!o)return}try{window.editBinding=function(){return o.bindingProvider.instance.getBindings($0,o.contextFor($0))}.bind(console)(),window.edit$data=function(){return o.contextFor($0).$data}.bind(console)(),window.edit$root=function(){return o.contextFor($0).$root}.bind(console)()}catch{}},_="Knockout context",h=!0,d="Unable to get value from localstorage. Check the privacy settings of chrome";try{const o=await chrome.storage.local.get("shouldDoKOtoJS");var w=o==null?void 0:o.shouldDoKOtoJS;w&&(h=JSON.parse(w))}catch(o){console.log(d,o)}var f=void 0,v=!1;try{const o=await chrome.storage.local.get("shouldAddEditMethods");f=o==null?void 0:o.shouldAddEditMethods,f&&(v=JSON.parse(f))}catch(o){console.log(d,o)}chrome.devtools.panels.elements.createSidebarPane(_,function(o){function c(){o.setExpression("("+S.toString()+")("+h+")"),v&&chrome.devtools.inspectedWindow.eval("("+$.toString()+")()")}c(),chrome.devtools.panels.elements.onSelectionChanged.addListener(c),o.onShown.addListener(c),chrome.runtime.onMessage.addListener(function(m,t,s){c()})});var g=void 0;try{g=(await chrome.storage.local.get("shouldPanelBeShown")).shouldPanelBeShown}catch(o){console.log(d,o)}var k=!0;g!==null&&(k=g),k&&chrome.devtools.panels.create("KnockoutJS","../src/logo.png","../src/devtool/panel.html")})();
